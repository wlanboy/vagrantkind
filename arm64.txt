set -e
export DEBIAN_FRONTEND=noninteractive
sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
echo "deb [arch=arm64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
sudo apt-get update
sudo apt-get install -y nano htop apt-transport-https ca-certificates git curl gnupg2 software-properties-common lsb-release wget net-tools nfs-common
sudo apt-get install -y docker-ce docker-ce-cli containerd.io kubectl

wget https://get.helm.sh/helm-v3.7.1-linux-arm64.tar.gz
tar -zxvf helm-v3.7.1-linux-arm64.tar.gz
sudo cp linux-arm64/helm /usr/local/bin/helm

curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.11.1/kind-linux-arm64
chmod +x ./kind
sudo mv ./kind /usr/bin

sudo sysctl -w net.ipv4.ip_forward=1
sudo sed -i 's/#net.ipv4.ip_forward=1/net.ipv4.ip_forward=1/g' /etc/sysctl.conf 

cat << EOF >> kindconfig.yml
kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
name: kindcluster
networking:
  ipFamily: ipv4
  apiServerAddress: "192.168.178.39"
  apiServerPort: 6443
nodes:
- role: control-plane
  kubeadmConfigPatches:
  - |
    kind: InitConfiguration
    nodeRegistration:
      kubeletExtraArgs:
        node-labels: "ingress-ready=true"
  extraPortMappings:
  - containerPort: 80
    hostPort: 9080
    protocol: TCP
  - containerPort: 443
    hostPort: 9443
    protocol: TCP
- role: worker
EOF

cat << EOF >> echoservice.yml
kind: Pod
apiVersion: v1
metadata:
  name: echo
  labels:
    app: echo
spec:
  containers:
  - name: httpecho
    image: hashicorp/http-echo:0.2.3
    args:
    - "-text=echo"
---
kind: Service
apiVersion: v1
metadata:
  name: echo-service
spec:
  selector:
    app: echo
  ports:
  # Default port used by the image
  - port: 5678
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: echo-ingress
spec:
  rules:
  - http:
      paths:
      - pathType: Prefix
        path: "/echo"
        backend:
          service:
            name: echo-service
            port:
              number: 5678
---
EOF

kind create cluster --config kindconfig.yml
kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml
